@using Logic.Domain
@using RollerSkis.Models
@model IEnumerable<ProductTypeNode>
@{
    Layout = null;
}
<!-- Верхний уровень -->
@{ ProductTypeHelper Pth = new ProductTypeHelper (); }

<div class="navbar">
    <div class="navbar-inner">
        <ul class="nav">
            @*Main*@
            <li><a href="#">Main</a></li>

            @*Catalog*@
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#">Products</a>

                @*Dropdown declaration*@
                <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
                @foreach(ProductTypeNode p in Model)
                {
                    @*Dropdown row*@
                    bool haveChildren = p.ChildrenCount > 0;
                    string ddSummenu = haveChildren ? "dropdown-submenu" : null;

                    <li class="@ddSummenu">
                        @Html.RouteLink(p.ProductTypeValue.ProductTypeName, new { controller = "Product", action = "GetProducts", highType = @Pth[p.ProductTypeValue.ProductType] })

                        @if (haveChildren)
                        {
                            <ul class="dropdown-menu">
                                @foreach (ProductTypeNode c in p.Children)
                                {
                                    <li>
                                        @Html.RouteLink(@c.ProductTypeValue.ProductTypeName, new { controller = "Product", action = "GetProducts", highType = @Pth[p.ProductTypeValue.ProductType], lowType = @Pth[@c.ProductTypeValue.ProductType] })
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
                </ul>
            </li>

            @*Contacts*@
            <li><a href="#">Contacts</a></li>

            @*Cart*@
            <li><a href="#">Cart</a></li>
        </ul>
    </div>
</div>